{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["D:\\vscodeworkspace\\test_vue\\my-vue-project\\src\\components\\ValidCode.vue"],"sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ValidCode\",\r\n  model: {\r\n    prop: \"value\",\r\n    event: \"input\",\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: \"100px\",\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"40px\",\r\n    },\r\n    length: {\r\n      type: Number,\r\n      default: 4,\r\n    },\r\n    refresh: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      codeList: [],\r\n    };\r\n  },\r\n  watch: {\r\n    refresh() {\r\n      this.createdCode();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createdCode();\r\n  },\r\n  methods: {\r\n    refreshCode() {\r\n      this.createdCode();\r\n    },\r\n    createdCode() {\r\n      const len = this.length;\r\n      const codeList = [];\r\n      const chars =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      const charsLen = chars.length;\r\n      for (let i = 0; i < len; i++) {\r\n        const rgb = [\r\n          Math.round(Math.random() * 220),\r\n          Math.round(Math.random() * 240),\r\n          Math.round(Math.random() * 200),\r\n        ];\r\n        codeList.push({\r\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\r\n          color: \"rgb($rgb)\",\r\n          fontSize: \"${10 + (+[Math.floor(Math.random() * 10)] + 6)}px\",\r\n          padding: \"${[Math.floor(Math.random() * 10)]}px\",\r\n          transform:\r\n            \"rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)\",\r\n        });\r\n      }\r\n      // 指向\r\n      this.codeList = codeList;\r\n      // 将当前数据派发出去\r\n      // console.log(codeList.map(item => item.code).join(''))\r\n      this.$emit(\"input\", codeList.map((item) => item.code).join(\"\"));\r\n    },\r\n    getStyle (data) {\r\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`\r\n    }\r\n  },\r\n};\r\n</script> \r\n\r\n<style scoped>\r\n.ValidCode {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n.ValidCode span {\r\n  display: inline-block;\r\n}\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}